// <auto-generated />
using System;
using ImobSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImobSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240521125346_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ImobSystem.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoImovel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Interesse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorImovel")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ImobSystem.Models.ClientFase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FaseId");

                    b.ToTable("ClientFases");
                });

            modelBuilder.Entity("ImobSystem.Models.ClientService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientServices");
                });

            modelBuilder.Entity("ImobSystem.Models.Fase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fases")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fases");
                });

            modelBuilder.Entity("ImobSystem.Models.Formalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataContrato")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDoc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEscritura")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataVistoria")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modalidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProposalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.ToTable("Formalizations");
                });

            modelBuilder.Entity("ImobSystem.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorImovel")
                        .HasColumnType("TEXT");

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("ImobSystem.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("ImobSystem.Models.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("HouseId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorContraProposal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorProposal")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("HouseId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("ImobSystem.Models.VisitHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("HouseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("HouseId");

                    b.ToTable("VisitHouses");
                });

            modelBuilder.Entity("ImobSystem.Models.ClientFase", b =>
                {
                    b.HasOne("ImobSystem.Models.Client", "Client")
                        .WithMany("ClientFases")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImobSystem.Models.Fase", "Fase")
                        .WithMany("ClientFases")
                        .HasForeignKey("FaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Fase");
                });

            modelBuilder.Entity("ImobSystem.Models.ClientService", b =>
                {
                    b.HasOne("ImobSystem.Models.Client", "Client")
                        .WithMany("ClientServices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ImobSystem.Models.Formalization", b =>
                {
                    b.HasOne("ImobSystem.Models.Proposal", "Proposal")
                        .WithMany("Formalizations")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("ImobSystem.Models.House", b =>
                {
                    b.HasOne("ImobSystem.Models.Owner", "Owner")
                        .WithMany("Houses")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ImobSystem.Models.Proposal", b =>
                {
                    b.HasOne("ImobSystem.Models.Client", "Client")
                        .WithMany("Proposals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImobSystem.Models.House", "House")
                        .WithMany("Proposals")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("House");
                });

            modelBuilder.Entity("ImobSystem.Models.VisitHouse", b =>
                {
                    b.HasOne("ImobSystem.Models.Client", "Client")
                        .WithMany("VisitHouses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImobSystem.Models.House", "House")
                        .WithMany("VisitHouses")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("House");
                });

            modelBuilder.Entity("ImobSystem.Models.Client", b =>
                {
                    b.Navigation("ClientFases");

                    b.Navigation("ClientServices");

                    b.Navigation("Proposals");

                    b.Navigation("VisitHouses");
                });

            modelBuilder.Entity("ImobSystem.Models.Fase", b =>
                {
                    b.Navigation("ClientFases");
                });

            modelBuilder.Entity("ImobSystem.Models.House", b =>
                {
                    b.Navigation("Proposals");

                    b.Navigation("VisitHouses");
                });

            modelBuilder.Entity("ImobSystem.Models.Owner", b =>
                {
                    b.Navigation("Houses");
                });

            modelBuilder.Entity("ImobSystem.Models.Proposal", b =>
                {
                    b.Navigation("Formalizations");
                });
#pragma warning restore 612, 618
        }
    }
}
